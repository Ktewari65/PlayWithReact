{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ddeco\\\\Downloads\\\\Movies and Api calls\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movie, setMovie] = useState([]);\n  // console.log(movie)\n  const fetchMovie = () => {\n    fetch('https://swapi.dev/api/films/').then(response => {\n      return response.json();\n    }).then(data => {\n      //console.log(data)\n      const transformedMovie = data.results.map(item => {\n        console.log(item);\n        return {\n          id: item.episode_id,\n          title: item.title,\n          releaseDate: item.release_date,\n          openingText: item.opening_crawl\n        };\n      });\n      setMovie(transformedMovie);\n    });\n  };\n\n  // async function fetchMovie() {\n  //   try {\n  //      const response = await fetch('https://swapi.dev/api/films/')\n  //      const data = response.json()\n\n  //     fetchMovie().then((data)=>{\n  //     const transformedMovie = data.results.map((item) =>{\n  //     return {\n\n  //            id:item.episode_id,\n  //             title:item.title,\n  //            releaseDate:item.release_date,\n  //             openingText:item.opening_crawl\n  //            }\n  //           })\n  //           setMovie(transformedMovie)\n  //   })\n  // }  \n\n  // catch{\n  //   console.log('error')\n  // }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMovie,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4xnEyOxkhzftcTrcpOuFQ02fRSg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movie","setMovie","fetchMovie","fetch","then","response","json","data","transformedMovie","results","map","item","console","log","id","episode_id","title","releaseDate","release_date","openingText","opening_crawl","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","movies","_c","$RefreshReg$"],"sources":["C:/Users/ddeco/Downloads/Movies and Api calls/src/App.js"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movie, setMovie] = useState([])\n // console.log(movie)\n   const fetchMovie = () =>{\n     fetch('https://swapi.dev/api/films/').then ((response) =>{\n         return response.json();\n     }).then((data) =>{\n        //console.log(data)\n        const transformedMovie = data.results.map((item) =>{\n         console.log(item)\n         return {\n          id:item.episode_id,\n          title:item.title,\n          releaseDate:item.release_date,\n          openingText:item.opening_crawl\n         }\n        \n     })\n          setMovie(transformedMovie)\n     })\n   }\n \n   \n \n\n  // async function fetchMovie() {\n  //   try {\n  //      const response = await fetch('https://swapi.dev/api/films/')\n  //      const data = response.json()\n\n  //     fetchMovie().then((data)=>{\n  //     const transformedMovie = data.results.map((item) =>{\n  //     return {\n\n  //            id:item.episode_id,\n  //             title:item.title,\n  //            releaseDate:item.release_date,\n  //             openingText:item.opening_crawl\n  //            }\n  //           })\n  //           setMovie(transformedMovie)\n  //   })\n  // }  \n\n  // catch{\n  //   console.log('error')\n  // }\n  \n  \n   \n       \n   \n  \n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMovie}>Fetch Movies</button>\n      </section>\n      <section>\n        <MoviesList movies={movie} />\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACvC;EACE,MAAMQ,UAAU,GAAGA,CAAA,KAAK;IACtBC,KAAK,CAAC,8BAA8B,CAAC,CAACC,IAAI,CAAGC,QAAQ,IAAI;MACrD,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CAACF,IAAI,CAAEG,IAAI,IAAI;MACd;MACA,MAAMC,gBAAgB,GAAGD,IAAI,CAACE,OAAO,CAACC,GAAG,CAAEC,IAAI,IAAI;QAClDC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjB,OAAO;UACNG,EAAE,EAACH,IAAI,CAACI,UAAU;UAClBC,KAAK,EAACL,IAAI,CAACK,KAAK;UAChBC,WAAW,EAACN,IAAI,CAACO,YAAY;UAC7BC,WAAW,EAACR,IAAI,CAACS;QAClB,CAAC;MAEL,CAAC,CAAC;MACGnB,QAAQ,CAACO,gBAAgB,CAAC;IAC/B,CAAC,CAAC;EACJ,CAAC;;EAKF;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAQA,oBACEX,OAAA,CAACJ,KAAK,CAAC4B,QAAQ;IAAAC,QAAA,gBACbzB,OAAA;MAAAyB,QAAA,eACEzB,OAAA;QAAQ0B,OAAO,EAAErB,UAAW;QAAAoB,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACV9B,OAAA;MAAAyB,QAAA,eACEzB,OAAA,CAACF,UAAU;QAACiC,MAAM,EAAE5B;MAAM;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB;AAAC5B,EAAA,CAhEQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAkEZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}