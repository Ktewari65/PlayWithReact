{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ddeco\\\\Downloads\\\\Redux1\\\\Redux2\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useEffect } from 'react';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector } from 'react-redux';\nimport Notification from './components/UI/Notification';\nimport { useDispatch } from 'react-redux';\nimport { cartState } from './ReduxStore/Redux';\nimport { fetchData } from './ReduxStore/Redux';\n\n//let initialStatus = true \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n  _s();\n  const cart = useSelector(state => state.isCart);\n  const items = useSelector(state => state.items);\n  const quantity = useSelector(state => state.totalQuantity);\n  const dispatch = useDispatch();\n  const status = useSelector(state => state.isNotification);\n  //console.log(status)\n\n  useEffect(() => {\n    dispatch(fetchData);\n  }, []);\n  useEffect(() => {\n    dispatch(cartState.itemStatus({\n      statue: \"Sending\",\n      title: \"Sending......\",\n      message: \"Sent\"\n    }));\n    fetch(\"https://expensetreacker-default-rtdb.firebaseio.com/cart.json\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        items,\n        quantity\n      })\n    }).then(response => {\n      dispatch(cartState.itemStatus({\n        statue: \"success\",\n        title: \"Successfull\",\n        message: \"Sent\"\n      }));\n      response.json().then(data => {}).catch(error => {\n        dispatch(cartState.itemStatus({\n          statue: \"error\",\n          title: \"Error\",\n          message: \"Something went wrong\"\n        }));\n      });\n    });\n  }, [items, quantity, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [status && /*#__PURE__*/_jsxDEV(Notification, {\n      title: status.title,\n      message: status.message,\n      error: status.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [cart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kwEWL1g2tEAnqPaww5uW2kAqMCg=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useEffect","Cart","Layout","Products","useSelector","Notification","useDispatch","cartState","fetchData","jsxDEV","_jsxDEV","App","props","_s","cart","state","isCart","items","quantity","totalQuantity","dispatch","status","isNotification","itemStatus","statue","title","message","fetch","method","body","JSON","stringify","then","response","json","data","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ddeco/Downloads/Redux1/Redux2/src/App.js"],"sourcesContent":["import { Fragment, useEffect } from 'react';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector } from 'react-redux';\nimport Notification from './components/UI/Notification';\nimport { useDispatch } from 'react-redux';\nimport { cartState } from './ReduxStore/Redux';\nimport { fetchData } from './ReduxStore/Redux';\n\n\n \n//let initialStatus = true \nfunction App(props) {\n  const cart = useSelector(state=>state.isCart)\n  const items = useSelector(state=>state.items)\n   const quantity = useSelector(state=>state.totalQuantity)\n   const dispatch = useDispatch()\n   const status = useSelector (state=>state.isNotification)\n   //console.log(status)\n\n\n   useEffect(()=>{\n       dispatch(fetchData)\n   },[])\n\n  useEffect(() =>{\n    dispatch(cartState.itemStatus({\n      statue : \"Sending\",\n      title: \"Sending......\",\n      message :\"Sent\"\n    }))\n     fetch(\"https://expensetreacker-default-rtdb.firebaseio.com/cart.json\",{\n      method: \"POST\",\n      body: JSON.stringify({items,quantity})\n     }).then((response)=>{\n      dispatch(cartState.itemStatus({\n        statue : \"success\",\n        title: \"Successfull\",\n        message :\"Sent\"\n      }))\n        response.json().then((data)=>{\n          \n        }).catch((error)=>{\n          dispatch(cartState.itemStatus({\n            statue : \"error\",\n            title: \"Error\",\n            message :\"Something went wrong\"\n          }))\n        })\n     })\n  },[items,quantity,dispatch])\n\n\n \n  return (\n    <Fragment>\n    {status &&   <Notification title ={status.title}  message = {status.message} error ={status.error}/>}\n    <Layout>\n     {cart  && <Cart />}\n      <Products />\n    </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}