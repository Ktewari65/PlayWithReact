{"ast":null,"code":"//import React from \"react\";\nimport { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isCart: false,\n  items: [],\n  totalQuantity: 0\n};\nconst cartStore = createSlice({\n  name: 'CART',\n  initialState,\n  reducers: {\n    setCart(state) {\n      state.isCart = true;\n    },\n    closeCart(state) {\n      state.isCart = false;\n    },\n    addItemToCart(state, action) {\n      const newItems = action.payload;\n      const existingItem = state.items.find(item => item.id === newItems.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItems.id,\n          price: newItems.price,\n          quantity: 1,\n          totalPrice: newItems.price,\n          name: newItems.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItems.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n      }\n    }\n  }\n});\nconst store = configureStore({\n  reducer: cartStore.reducer\n});\nexport default store;\nexport const cartState = cartStore.actions;","map":{"version":3,"names":["configureStore","createSlice","initialState","isCart","items","totalQuantity","cartStore","name","reducers","setCart","state","closeCart","addItemToCart","action","newItems","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","store","reducer","cartState","actions"],"sources":["C:/Users/ddeco/Downloads/Redux1/Redux2/src/ReduxStore/Redux.js"],"sourcesContent":["//import React from \"react\";\r\nimport { configureStore, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {isCart:false, items : [], totalQuantity:0}\r\nconst cartStore = createSlice({\r\n    name:'CART',\r\n    initialState,\r\n    reducers :{\r\n        setCart(state){\r\n          state.isCart = true\r\n        },\r\n        closeCart(state){\r\n            state.isCart= false\r\n        },\r\n        addItemToCart(state,action){\r\n          const newItems = action.payload\r\n          const existingItem = state.items.find((item) =>item.id===newItems.id)\r\n          state.totalQuantity++\r\n          if(!existingItem){\r\n            state.items.push({\r\n              id : newItems.id,\r\n              price: newItems.price,\r\n              quantity:1,\r\n              totalPrice: newItems.price,\r\n              name:newItems.title\r\n            })\r\n          }\r\n          else {\r\n            existingItem.quantity++\r\n            existingItem.totalPrice = existingItem.totalPrice + newItems.price;\r\n          }\r\n\r\n        },\r\n        removeItemFromCart(state,action){\r\n             const id = action.payload\r\n             const existingItem = state.items.find((item) => item.id ===id)\r\n             state.totalQuantity--\r\n             if(existingItem.quantity===1){\r\n                 state.items = state.items.filter(item => item.id!==id)\r\n             }\r\n             else{\r\n              existingItem.quantity--\r\n             }\r\n        }\r\n    }\r\n\r\n})\r\n\r\nconst store = configureStore({\r\n  reducer : cartStore.reducer\r\n})\r\n\r\nexport default store\r\n\r\nexport const cartState = cartStore.actions"],"mappings":"AAAA;AACA,SAASA,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;AAE9D,MAAMC,YAAY,GAAG;EAACC,MAAM,EAAC,KAAK;EAAEC,KAAK,EAAG,EAAE;EAAEC,aAAa,EAAC;AAAC,CAAC;AAChE,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC1BM,IAAI,EAAC,MAAM;EACXL,YAAY;EACZM,QAAQ,EAAE;IACNC,OAAOA,CAACC,KAAK,EAAC;MACZA,KAAK,CAACP,MAAM,GAAG,IAAI;IACrB,CAAC;IACDQ,SAASA,CAACD,KAAK,EAAC;MACZA,KAAK,CAACP,MAAM,GAAE,KAAK;IACvB,CAAC;IACDS,aAAaA,CAACF,KAAK,EAACG,MAAM,EAAC;MACzB,MAAMC,QAAQ,GAAGD,MAAM,CAACE,OAAO;MAC/B,MAAMC,YAAY,GAAGN,KAAK,CAACN,KAAK,CAACa,IAAI,CAAEC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAGL,QAAQ,CAACK,EAAE,CAAC;MACrET,KAAK,CAACL,aAAa,EAAE;MACrB,IAAG,CAACW,YAAY,EAAC;QACfN,KAAK,CAACN,KAAK,CAACgB,IAAI,CAAC;UACfD,EAAE,EAAGL,QAAQ,CAACK,EAAE;UAChBE,KAAK,EAAEP,QAAQ,CAACO,KAAK;UACrBC,QAAQ,EAAC,CAAC;UACVC,UAAU,EAAET,QAAQ,CAACO,KAAK;UAC1Bd,IAAI,EAACO,QAAQ,CAACU;QAChB,CAAC,CAAC;MACJ,CAAC,MACI;QACHR,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGT,QAAQ,CAACO,KAAK;MACpE;IAEF,CAAC;IACDI,kBAAkBA,CAACf,KAAK,EAACG,MAAM,EAAC;MAC3B,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAGN,KAAK,CAACN,KAAK,CAACa,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAIA,EAAE,CAAC;MAC9DT,KAAK,CAACL,aAAa,EAAE;MACrB,IAAGW,YAAY,CAACM,QAAQ,KAAG,CAAC,EAAC;QACzBZ,KAAK,CAACN,KAAK,GAAGM,KAAK,CAACN,KAAK,CAACsB,MAAM,CAACR,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAGA,EAAE,CAAC;MAC1D,CAAC,MACG;QACHH,YAAY,CAACM,QAAQ,EAAE;MACxB;IACL;EACJ;AAEJ,CAAC,CAAC;AAEF,MAAMK,KAAK,GAAG3B,cAAc,CAAC;EAC3B4B,OAAO,EAAGtB,SAAS,CAACsB;AACtB,CAAC,CAAC;AAEF,eAAeD,KAAK;AAEpB,OAAO,MAAME,SAAS,GAAGvB,SAAS,CAACwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}